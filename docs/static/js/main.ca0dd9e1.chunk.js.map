{"version":3,"sources":["firebase/firebaseConfig.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","googleAuthProvider","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setErrorAction","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","auth","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","console","log","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isLoggedIn","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca0dd9e1.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDy5MPBcRpI2eXsVxMKfl6kReCND77mYxc\",\r\n    authDomain: \"react-app-curso-f88c9.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-curso-f88c9.firebaseio.com\",\r\n    projectId: \"react-app-curso-f88c9\",\r\n    storageBucket: \"react-app-curso-f88c9.appspot.com\",\r\n    messagingSenderId: \"786473248232\",\r\n    appId: \"1:786473248232:web:b4dda3ccf85a2123df705d\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","export const types = {\r\n\r\n    login:'[Auth] Login',\r\n    logout:'[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n\r\n}","import { types } from '../types/types';\r\n\r\nexport const setErrorAction = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeErrorAction = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    /* GENERAMOS UN NUEVO ARREGLO Y LO ALMACENAMOS EN LAS NOTAS */\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    // console.log(notes);\r\n    return notes;\r\n}","\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/reactapp/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if( resp.ok ) {\r\n\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n\r\n    /* LE PASAMOS LA FUNCION GETSTATE DONDE ESTA TODO EL STATE DE LA APLICACION */\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n        // console.log(uid)\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        /* OCUPAMOS LA REFERENCIA A LA BASE DE DATOS DE FIREBASE PARA AGREGAR LA COLECCION */\r\n        /* COMO ESTO ES UNA PROMESA PODEMOS CONVERTIR ESTO EN ASYNC - AWAIT */\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ))\r\n        // console.log(docRef)\r\n\r\n        dispatch(addNewNote( doc.id ))\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n         id, ...note\r\n        }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        /* ESTA FUNCION REGRESA LAS NOTAS */\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ));\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async( dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        /* ELIMINAMOS EL URL POR QUE FIREBASE NO PERMITE CAMPOS EN NULL */\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        /* USAMOS EL OPERADOR SPREAD PARA SEPARAR TODA LA NOTA */\r\n        const noteToFirestore = { ...note };\r\n        /* ELIMINAMOS LA PROPIEDAD ID DE LA NOTA PARA NO MODIFICAR EL PRINCIPAL ACCIDENTALMENTE */\r\n        delete noteToFirestore.id;\r\n\r\n        /* HACEMOS LA GRABACION DE LA NUEVA NOTA - ACTUALIZACION */\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        /* REFRESCAMOS LAS NOTAS UNA VEZ LAS HAYAMOS ACTUALIZADO */\r\n        dispatch( refreshNote(note.id, noteToFirestore ));\r\n\r\n        Swal.fire('saved', note.title, 'success');\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id, \r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active: activeNote } = getState().notes; \r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        \r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ))\r\n\r\n        Swal.close();\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n\r\n    }   \r\n}\r\n\r\n/* ESTA ACCION MODIFICA EL STORE */\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","/* AQUI PONEMOS LAS ACCIONES, QUE NO SON MAS QUE FUNCIONES */\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from '../types/types';\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\n/* PRIMERA ACCION ASINCRONA */\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then(({ user }) => {\r\n\r\n                dispatch( login(user.uid, user.displayName) );\r\n                dispatch( finishLoading() );\r\n\r\n            })\r\n            .catch( err => {\r\n                \r\n                dispatch( finishLoading() );\r\n\r\n                /* AQUI UTILIZAMOS EL SWEET ALERT PARA MOSTRAR EL ERROR */\r\n                Swal.fire('Error', err.message, 'error')\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    /* COMO ESTO ES UNA TAREA ASINCRONA, NECESITAMOS RETORNAR UN CALLBACK */\r\n    /* EN EL MOMENTO EN QUE YA TENGA MI USUARIO EN FIREBASE AHI ES DONDE REALIZARE EL DISPATCH */\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then(async({ user } ) => {\r\n\r\n                /* ESTA FUNCION ME PERMITE ACTUALIZAR VALORES EN FIREBASE, COMO EL DISPLAYNAME */\r\n                /* YA QUE ESTE CON UN LOGIN NORMAL NO VENDRIA IMPLEMENTADO */\r\n                await user.updateProfile( {displayName: name });\r\n\r\n                // console.log(user)\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n\r\n            })\r\n            .catch( err => {\r\n                Swal.fire('Error', err.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    /* COMO ES UNA TAREA ASINCRONA RETORNAMOS UN CALLBACK */\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            })\r\n    }   \r\n}\r\n\r\n/* PARA NO PONER EL RETURN LO PONEMOS ENTRE PARENTESIS */\r\n/* POR QUE REGRESA UN OBJETO */\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid, \r\n            displayName\r\n        }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    /* COMO ES UN PROCESO ASINCRONO RETORNAMOS UN CALLBACK */\r\n    return async( dispatch ) => {\r\n\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    /* REACT REDUX NOS BRINDA EL HOOK USEDISPATCH QUE SIRVE PARA HACER DISPATCH DE ACCIONES */\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector( state => state.ui )\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'mateoslopera@gmail.com',\r\n        password:'123456'\r\n    })\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        /* HACEMOS EL DISPATCH DE UNA ACCION AL STORE */\r\n        /* LA ACCION QUE HAREMOS ES EL LOGIN - LO IMPORTAMOS DE ACCIONES */\r\n        dispatch( startLoginEmailPassword(email, password) )\r\n\r\n    }\r\n\r\n    /* HANDLE DEL LOGIN CON GOOGLE */\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Ingresa tu Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= {email}\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Ingresa tu Contraseña\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value= {password}\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled= { loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick= { handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\">\r\n                        Create a new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\n/* IMPORTAMOS EL VALIDATOR PARA VALIDAR EL FORMULARIO */\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setErrorAction, removeErrorAction } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* UTILIZAMOS EL HOOK USESELECTOR QUE NOS BIRNDA REACT-REDUX PARA OBTENER PARTE DEL STATE */\r\n    /* ESTE RECIBE UN CALLBACK EN EL CUAL TENGO EL STATE, DEL STATE EXTRAEMOS LA PARTE DE UI Y DESESTRUCTURAMOS */\r\n    const { msgError } = useSelector( state => state.ui );\r\n    // console.log(state)\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        name: 'Mateo',\r\n        email: 'msl@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues; \r\n\r\n    const handleRegister = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ))\r\n        }\r\n    }\r\n\r\n    /* HACEMOS LA VALIDACION DEL FORMULARIO */\r\n    const isFormValid = () => {\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setErrorAction('Name is required'))\r\n            return false;\r\n        } else if ( !validator.isEmail( email )) {\r\n            dispatch( setErrorAction('Email is invalid'))\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5) {\r\n            dispatch( setErrorAction('Password should have at least 6 characters and match'))\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeErrorAction() )\r\n\r\n        return true; \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>   \r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }             \r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\">\r\n                        ¿Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                    <div \r\n                        className=\"journal__entry-picture\"\r\n                        style={ {\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url(${url})`\r\n                        } }\r\n                    ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n        <span> { noteDate.format('dddd') } </span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n    console.log(notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key= { note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const dispatch =  useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick= {handleAddNew}  \r\n            >\r\n\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        \r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        \r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUploading( file ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> 28 Agosto 2020 </span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handlePictureUpload }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* LO RENOMBRAMOS A NOTE */\r\n    const { active: note } = useSelector(state => state.notes)\r\n    // console.log(note)\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    // console.log(formValues);\r\n\r\n    const { body, title, id } = formValues;\r\n\r\n    /* ME PERMITE ALMACENAR UNA VARIABLE MUTABLE QUE NO VA A REDIBUJAR TODO EL COMPONENTE SI CAMBIA */\r\n    const activeId = useRef( note.id );\r\n\r\n    /* USAMOS EL USEEFFECT PARA SABER SI CAMBIO EL ESTADO DEL FORMULARIO */\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    /* AQUI ACTUALIZAMOS EL ESTADO DE LA NOTA CUANDO SE HACE UNA MODIFICACION */\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) )\r\n\r\n    }, [ formValues, dispatch ])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name= \"title\"\r\n                    value= { title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"¿What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name= \"body\"\r\n                    value= { body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src= { note.url }\r\n                                alt=\"landscape\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick= { handleDelete }\r\n            >\r\n                Eliminar\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select Something\r\n                <br />\r\n                Or create an entry!    \r\n            </p>    \r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>             \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes )\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    /* PODEMOS HACER LA CONDICION QUE SI ES DIFERENTE DE NULL, PERO DEJARLO ASI\r\n                    SERIA LO MISMO */\r\n                    ( active )\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }                \r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    /* RENOMBRAMOS EL COMPONENTE */\r\n    component: Component,\r\n    /* RESTO DE LOS COMPONENTES */\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isLoggedIn )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isLoggedIn )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { firebase } from '../firebase/firebaseConfig';\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /* ESTO SERA COMO UNA BANDERA QUE REVISA EL ESTADO DE FIREBASE, SI ESTA AUTENTICADO O NO */\r\n    const [checking, setChecking] = useState(true)\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    /* ESTO LO MANDA FIREBASE CADA QUE CAMBIA EL ESTADO DE LA AUTENTICACION Y EL CALLBACK SIEMPRE SE \r\n    VA A ESTAR EJECUTANDO */\r\n    useEffect(() => {\r\n\r\n        /* ESTO RETORNA UN OBSERVABLE QUE SE VA A DISPARAR EN CADA CAMBIO */\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            \r\n            /* SI EL OBJETO USER TIENE ALGO, ENTONCES PREGUNTA SI EXISTE LA PROPIEDAD UID */\r\n            if ( user?.uid) {\r\n                dispatch( login( user.uid, user.displayName) );\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ));\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false)\r\n\r\n        });\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if( checking ) {\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            \r\n            <Switch>\r\n\r\n                <PublicRoute \r\n                    path=\"/auth\"\r\n                    component={ AuthRouter }\r\n                    isLoggedIn = {isLoggedIn}    \r\n                />\r\n                <PrivateRoute\r\n                    path=\"/\"\r\n                    component={ JournalScreen }\r\n                    isLoggedIn = { isLoggedIn }\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","/*\r\n * {\r\n *      notes: [],\r\n *      active: { id: 'sda213123', title: '', body: '', imageUrl: '', date: ''} || null\r\n *  }\r\n */\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\n export const notesReducer = ( state = initialState, action ) => {\r\n     \r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n    \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n }\r\n\r\n /* SIEMPRE DEBEMOS REGRESAR EL SPREAD DEL STATE PARA NO HACER MODIFICACIONES INNECESARIAS \r\n O ACCIDENTALES */","/* EL STORE ES LA FUENTE UNICA DE INFORMACION */\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n/* IMPORTAMOS EL REDUX-THUNK EL CUAL SIRVE PARA IMPLEMENTAR EL MIDDLEWARE */\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n/* ESTA CONSTANTE HABILITA LAS EXTENSIONES DEL DEVTOOLS Y PERMITE ENVIAR MIDDLEWARES */\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n/* UTILIZAMOS COMBINEREDUCERS PARA PERMITIRLE AL STORE RECIBIR VARIOS REDUCERS EN VEZ DE UNO SOLO */\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n/* EL STORE RECIBE UN REDUCER LE MANDAMOS EL OBJETO CON LOS REDUCERS */\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );\r\n\r\n/* NECESITAMOS LLEVAR EL STORE AL PUNTO MAS ALTO DE LA APLICACION, QUE EN ESTE CASO SERIA JOURNALAPP */\r\n/* ESE SEGUNDO ARGUMENTO SE ENCUENTRA AQUI https://github.com/zalmoxisus/redux-devtools-extension#usage */","import { types } from \"../types/types\";\r\n/*\r\n *  EL STATE VA A ESTAR VACIO CUANDO NO ESTE AUTENCTICADO EL USUARIO, CUANDO LO ESTE \r\n * VA A TENER LO SIGUIENTE\r\n * {\r\n *      uid: 'askndlsan23123',\r\n *      name: 'Fernando'\r\n * } \r\n *\r\n */\r\n\r\n/* LOS REDUCERS RECIBEN EL STATE Y EL ACTION */\r\n/* DEFINIMOS EL STATE COMO UN OBJETO VACIO, ES IMPORTANTE INICIALIZARLO */\r\nexport const authReducer = ( state={}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\n/* ES COMO EL PROVIDER QUE HACIAMOS ANTERIORMENTE */\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\n/* IMPORTAMOS LA FUENTE UNICA DE INFORMACION (STORE) - REDUX */","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\n\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}